name: 'Terraform CI/CD'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-lint:
    name: 'Terraform Lint'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_version: "1.5.7"

    - name: Terraform Format Check
      id: fmt
      run: |
        for dir in $(find . -type f -name "*.tf" -not -path "*.terraform*" | xargs -I {} dirname {} | sort -u); do
          echo "Checking format in $dir"
          terraform -chdir=$dir fmt -check
        done

    # Other linting steps...

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: terraform-lint
    
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_version: "1.5.7"

    - name: Terraform Init
      id: init
      run: terraform -chdir=environments/prod init

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=environments/prod validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=environments/prod plan -no-color
      continue-on-error: true
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        # Other variables as needed

    # Add PR comment with plan results...

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform-lint
    
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_version: "1.5.7"

    - name: Terraform Init
      id: init
      run: terraform -chdir=environments/prod init

    - name: Terraform Apply
      run: terraform -chdir=environments/prod apply -auto-approve
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        # Other variables as needed
